// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  email String? @unique
  emailVerified DateTime?
  image String?
  hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  favoriteIds String[] @db.ObjectId

  accounts Account[]
  listrings Listing[]
  reservations Reservation[]
}

model Account{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.String
  access_token String? @db.String
  expires_at Int?
  token_type String?
  scope String?
  id_token String? @db.String
  session_state String?

  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Listing {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  description String
  imageSrc String
  category String
  roomCount Int
  bathroomCount Int
  guestCount Int
  locationValue String
  price Int
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  
  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  reservation Reservation[]
}

model Reservation{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  startDate DateTime
  endDate DateTime
  totalPrice Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  listingId String @db.ObjectId
  listing Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)

  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
}